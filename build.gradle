buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		flatDir {
			dirs 'libs'
		}
		dependencies {
			classpath name: 'shadow', version: '2+'
			classpath name:'command-plugin', version: '1+'
			classpath "net.ltgt.gradle:gradle-apt-plugin:0.20"
		}
	}
}

plugins {
	id 'java'
}

sourceSets {
	main {
		resources {
			srcDirs "src/main/resources/config"
		}
	}
}

configure(allprojects){
	
	apply plugin: 'com.github.johnrengelman.shadow'
	apply plugin: "com.automationanywhere.command-codegen"
	
	ext {
		groupName = 'com.automationanywhere'
		testNgVersion = '6.14.3'
		loggerVersion = '2.10.0'
		jnaVersion = '5.3.1'	
		version '1.4'
	}
	group "$groupName"

	sourceCompatibility = JavaVersion.VERSION_11

	compileJava.options.encoding = 'UTF-8'
	compileTestJava.options.encoding = 'UTF-8'
	
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		flatDir {
			dirs 'libs'
		}
	}
	
	configurations {
		apt
	}
	
	compileJava {
		options.annotationProcessorPath = configurations.apt
		
		dependsOn processResources

	}
	
	packageJson{
		artifactName = project.name
		group = "$groupName"
		author = ""
	}
	
	jar.dependsOn commandCodeGen
	
	shadowJar {
		baseName = project.name
		classifier = null
		mergeServiceFiles('META-INF/spring.*')
		mergeServiceFiles('META-INF/services/java.sql.Driver')
		zip64 = true
		exclude 'META-INF/MANIFEST.MF'
		exclude 'META-INF/*.SF'
		exclude 'META-INF/*.DSA'
		exclude 'META-INF/*.RSA'
		rename '^OABWrapper.*\\.zip$', 'OABWrapper.zip'
	}

	
	dependencies {
		compileOnly name: 'command-annotations', version: '1+'
		compileOnly name: 'bot-runtime', version: '1+'
		compileOnly name: 'bot-api', version: '1+'
		compileOnly name: 'common-security', version: '1+'
		implementation name: 'i18n-api', version: '1+'
		apt name: 'command-processor', version: '1+'
		compileOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: "$loggerVersion"
		testImplementation "org.testng:testng:$testNgVersion"
		testImplementation name: 'bot-runtime', version: '1+'
		testImplementation name: 'bot-api', version: '1+'


		// https://mvnrepository.com/artifact/net.java.dev.jna/jna
		implementation group: 'net.java.dev.jna', name: 'jna', version: '5.8.0'
		implementation 'net.java.dev.jna:jna-platform:5.5.0'
		implementation 'org.json:json:20171018'

//		compile group: 'org.apache.activemq', name: 'activemq-all', version: '5.15.0'
//		compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.7.0'
//		compile group: 'com.h2database', name: 'h2', version: '1.4.200'

		//Add below dependencies to compile the samples

		//implementation group: 'net.java.dev.jna', name: 'jna-platform', version: "$jnaVersion"	
		//compile group: 'org.springframework', name: 'spring-jms', version: '5.0.2.RELEASE'
		//compile group: 'org.apache.activemq', name: 'activemq-all', version: '5.15.0'
		//compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.7.0'
		// // https://mvnrepository.com/artifact/com.h2database/h2
		//compile group: 'com.h2database', name: 'h2', version: '1.4.200'
		
	}
	
}
